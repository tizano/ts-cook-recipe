/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as AboutRouteImport } from './routes/about';
import { Route as IndexRouteImport } from './routes/index';
import { Route as userPasswordUpdateRouteImport } from './routes/(user)/password-update';
import { Route as userAccountRouteImport } from './routes/(user)/account';
import { Route as authRegisterRouteImport } from './routes/(auth)/register';
import { Route as authLoginRouteImport } from './routes/(auth)/login';
import { Route as appUsersRouteImport } from './routes/(app)/users';
import { Route as appSettingsRouteImport } from './routes/(app)/settings';
import { Route as appRecipesRouteImport } from './routes/(app)/recipes';
import { Route as appIngredientsRouteImport } from './routes/(app)/ingredients';
import { Route as appDashboardRouteImport } from './routes/(app)/dashboard';

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const userPasswordUpdateRoute = userPasswordUpdateRouteImport.update({
  id: '/(user)/password-update',
  path: '/password-update',
  getParentRoute: () => rootRouteImport,
} as any);
const userAccountRoute = userAccountRouteImport.update({
  id: '/(user)/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any);
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any);
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any);
const appUsersRoute = appUsersRouteImport.update({
  id: '/(app)/users',
  path: '/users',
  getParentRoute: () => rootRouteImport,
} as any);
const appSettingsRoute = appSettingsRouteImport.update({
  id: '/(app)/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any);
const appRecipesRoute = appRecipesRouteImport.update({
  id: '/(app)/recipes',
  path: '/recipes',
  getParentRoute: () => rootRouteImport,
} as any);
const appIngredientsRoute = appIngredientsRouteImport.update({
  id: '/(app)/ingredients',
  path: '/ingredients',
  getParentRoute: () => rootRouteImport,
} as any);
const appDashboardRoute = appDashboardRouteImport.update({
  id: '/(app)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/dashboard': typeof appDashboardRoute;
  '/ingredients': typeof appIngredientsRoute;
  '/recipes': typeof appRecipesRoute;
  '/settings': typeof appSettingsRoute;
  '/users': typeof appUsersRoute;
  '/login': typeof authLoginRoute;
  '/register': typeof authRegisterRoute;
  '/account': typeof userAccountRoute;
  '/password-update': typeof userPasswordUpdateRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/dashboard': typeof appDashboardRoute;
  '/ingredients': typeof appIngredientsRoute;
  '/recipes': typeof appRecipesRoute;
  '/settings': typeof appSettingsRoute;
  '/users': typeof appUsersRoute;
  '/login': typeof authLoginRoute;
  '/register': typeof authRegisterRoute;
  '/account': typeof userAccountRoute;
  '/password-update': typeof userPasswordUpdateRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/about': typeof AboutRoute;
  '/(app)/dashboard': typeof appDashboardRoute;
  '/(app)/ingredients': typeof appIngredientsRoute;
  '/(app)/recipes': typeof appRecipesRoute;
  '/(app)/settings': typeof appSettingsRoute;
  '/(app)/users': typeof appUsersRoute;
  '/(auth)/login': typeof authLoginRoute;
  '/(auth)/register': typeof authRegisterRoute;
  '/(user)/account': typeof userAccountRoute;
  '/(user)/password-update': typeof userPasswordUpdateRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/ingredients'
    | '/recipes'
    | '/settings'
    | '/users'
    | '/login'
    | '/register'
    | '/account'
    | '/password-update';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/about'
    | '/dashboard'
    | '/ingredients'
    | '/recipes'
    | '/settings'
    | '/users'
    | '/login'
    | '/register'
    | '/account'
    | '/password-update';
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/(app)/dashboard'
    | '/(app)/ingredients'
    | '/(app)/recipes'
    | '/(app)/settings'
    | '/(app)/users'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(user)/account'
    | '/(user)/password-update';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AboutRoute: typeof AboutRoute;
  appDashboardRoute: typeof appDashboardRoute;
  appIngredientsRoute: typeof appIngredientsRoute;
  appRecipesRoute: typeof appRecipesRoute;
  appSettingsRoute: typeof appSettingsRoute;
  appUsersRoute: typeof appUsersRoute;
  authLoginRoute: typeof authLoginRoute;
  authRegisterRoute: typeof authRegisterRoute;
  userAccountRoute: typeof userAccountRoute;
  userPasswordUpdateRoute: typeof userPasswordUpdateRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about';
      path: '/about';
      fullPath: '/about';
      preLoaderRoute: typeof AboutRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(user)/password-update': {
      id: '/(user)/password-update';
      path: '/password-update';
      fullPath: '/password-update';
      preLoaderRoute: typeof userPasswordUpdateRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(user)/account': {
      id: '/(user)/account';
      path: '/account';
      fullPath: '/account';
      preLoaderRoute: typeof userAccountRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(auth)/register': {
      id: '/(auth)/register';
      path: '/register';
      fullPath: '/register';
      preLoaderRoute: typeof authRegisterRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(auth)/login': {
      id: '/(auth)/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof authLoginRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(app)/users': {
      id: '/(app)/users';
      path: '/users';
      fullPath: '/users';
      preLoaderRoute: typeof appUsersRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(app)/settings': {
      id: '/(app)/settings';
      path: '/settings';
      fullPath: '/settings';
      preLoaderRoute: typeof appSettingsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(app)/recipes': {
      id: '/(app)/recipes';
      path: '/recipes';
      fullPath: '/recipes';
      preLoaderRoute: typeof appRecipesRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(app)/ingredients': {
      id: '/(app)/ingredients';
      path: '/ingredients';
      fullPath: '/ingredients';
      preLoaderRoute: typeof appIngredientsRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/(app)/dashboard': {
      id: '/(app)/dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof appDashboardRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  appDashboardRoute: appDashboardRoute,
  appIngredientsRoute: appIngredientsRoute,
  appRecipesRoute: appRecipesRoute,
  appSettingsRoute: appSettingsRoute,
  appUsersRoute: appUsersRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  userAccountRoute: userAccountRoute,
  userPasswordUpdateRoute: userPasswordUpdateRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
